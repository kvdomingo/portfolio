---
import dateFormat from "dateformat";
import { Button } from "../ui/button";

interface Props {
  data: Record<string, string | null>;
}

const { data } = Astro.props;
---

<li class="mt-[1.5rem] ml-[1.5rem]">
  <div
    class="bg-primary border-primary-foreground -ml-[2rem] size-[1rem] rounded-full border-2 border-solid"
  >
  </div>
  <div class="flex flex-col gap-4">
    <div class="-mt-[0.5rem]">
      <div class="grid md:grid-cols-2">
        <h5 class="text-lg">{data.title}</h5>
        <div
          class="small-caps text-muted-foreground flex justify-start md:justify-end"
        >
          ðŸ•‘{dateFormat(new Date(data.startDate!), "mmm yyyy")}
          {
            data.endDate === ""
              ? " â€“ present"
              : data.endDate == null
                ? ""
                : ` â€“ ${dateFormat(new Date(data.endDate), "mmm yyyy")}`
          }
        </div>
      </div>
      {
        data.subtitleLink ? (
          <a href={data.subtitleLink}>{data.subtitle}</a>
        ) : (
          <p>{data.subtitle}</p>
        )
      }
    </div>

    <slot>
      <p>
        {
          typeof data.body === "string" ? (
            data.body
          ) : Array.isArray(data.body) ? (
            <ul class="px-4">
              {(data.body as string[]).map(item => (
                <li class="list-disc">{item}</li>
              ))}
            </ul>
          ) : null
        }
      </p>
      {
        data.bodyLink ? (
          <div>
            <a href={data.bodyLink}>
              <Button variant="outline">See in portfolio</Button>
            </a>
          </div>
        ) : null
      }
    </slot>

    {
      data.captionLink ? (
        <a href={data.captionLink} class="text-sm">
          {data.caption}
        </a>
      ) : (
        <p class="text-sm">{data.caption}</p>
      )
    }
  </div>
</li>
